import { findContentById } from '@src/core/utils/finder'
import _ from 'lodash'
import { baseStatsObject, getPlungeScaling, StatsObject } from '../../baseConstant'
import { Element, ITalentLevel, Stats, TalentProperty } from '@src/domain/constant'

import { IContent, ITalent } from '@src/domain/conditional'
import { toPercentage } from '@src/core/utils/converter'
import { calcScaling } from '@src/core/utils/data_format'

const Raiden = (c: number, a: number, t: ITalentLevel) => {
  const upgrade = {
    normal: false,
    skill: c >= 5,
    burst: c >= 3,
  }
  const normal = t.normal + (upgrade.normal ? 3 : 0)
  const skill = t.skill + (upgrade.skill ? 3 : 0)
  const burst = t.burst + (upgrade.burst ? 3 : 0)

  const talents: ITalent = {
    normal: {
      title: 'Origin',
      content: `<b>Normal Attack</b>
      <br />Performs up to 5 consecutive spear strikes.
      <br />
      <br /><b>Charged Attack</b>
      <br />Consumes a certain amount of Stamina to perform an upward slash.
      <br />
      <br /><b>Plunging Attack</b>
      <br />Plunges from mid-air to strike the ground below, damaging opponents along the path and dealing AoE DMG upon impact.
      `,
      upgrade: ['c6'],
    },
    skill: {
      title: 'Transcendence: Baleful Omen',
      content: `The Raiden Shogun unveils a shard of her Euthymia, dealing <b class="text-genshin-electro">Electro DMG</b> to nearby opponents, and granting nearby party members the Eye of Stormy Judgment.
      <br />
      <br /><b>Eye of Stormy Judgment</b>
      <br />When characters with this buff attack and deal DMG to opponents, the Eye will unleash a coordinated attack, dealing <b class="text-genshin-electro">AoE Electro DMG</b> at the opponent's position.
      <br />Characters who gain the Eye of Stormy Judgment will have their Elemental Burst DMG increased based on the Energy Cost of the Elemental Burst during the Eye's duration.
      <br />
      <br />The Eye can initiate one coordinated attack every <span class="text-desc">0.9</span>s per party.
      <br />Coordinated attacks generated by characters not controlled by you deal <span class="text-desc">20%</span> of the normal DMG.
      `,
      upgrade: ['a4', 'c4', 'c5', 'c6'],
    },
    burst: {
      title: 'Secret Art: Musou Shinsetsu',
      content: `Gathering truths unnumbered and wishes uncounted, the Raiden Shogun unleashes the Musou no Hitotachi and deals <b class="text-genshin-electro">AoE Electro DMG</b>, using Musou Isshin in combat for a certain duration afterward. The DMG dealt by Musou no Hitotachi and Musou Isshin's attacks will be increased based on the number of Chakra Desiderata's Resolve stacks consumed when this skill is used.
      <br />
      <br /><b>Musou Isshin</b>
      <br />While in this state, the Raiden Shogun will wield her tachi in battle, while her Normal, Charged, and Plunging Attacks will be infused with <b class="text-genshin-electro">Electro DMG</b>, which cannot be overridden. When such attacks hit opponents, she will regenerate Energy for all nearby party members. Energy can be restored this way once every 1s, and this effect can be triggered 5 times throughout this skill's duration.
      <br />While in this state, the Raiden Shogun's resistance to interruption is increased, and she is immune to Electro-Charged reaction DMG.
      <br />While Musou Isshin is active, the Raiden Shogun's Normal, Charged, and Plunging Attack DMG will be considered Elemental Burst DMG.
      <br />
      <br />The effects of Musou Isshin will be cleared when the Raiden Shogun leaves the field.
      <br />
      <br /><b>Chakra Desiderata</b>
      <br />When nearby party members (excluding the Raiden Shogun herself) use their Elemental Bursts, the Raiden Shogun will build up Resolve stacks based on the Energy Cost of these Elemental Bursts.
      <br />The maximum number of Resolve stacks is <span class="text-desc">60</span>.
      <br />
      <br />The Resolve gained by Chakra Desiderata will be cleared 300s after the Raiden Shogun leaves the field.
      `,
      upgrade: ['c1', 'c2', 'c3'],
    },
    a1: {
      title: 'A1: Wishes Unnumbered',
      content: `When nearby party members gain Elemental Orbs or Particles, Chakra Desiderata gains <span class="text-desc">2</span> Resolve stacks.
      <br />This effect can occur once every 3s.`,
    },
    a4: {
      title: 'A4: Enlightened One',
      content: `Each <span class="text-desc">1%</span> above <span class="text-desc">100%</span> Energy Recharge that the Raiden Shogun possesses grants her:
      <br />- <span class="text-desc">0.6%</span> greater Energy restoration from Musou Isshin
      <br />- <span class="text-desc">0.4%</span> <b class="text-genshin-electro">Electro DMG Bonus</b>.
      `,
      value: [
        {
          name: 'Energy Restoration per Hit',
          value: {
            stat: Stats.ER,
            scaling: (er) => (_.min([1.5 + 0.1 * burst, 2.5]) * (1 + 0.6 * (er - 1))).toFixed(1),
          },
        },
        {
          name: 'Electro DMG Bonus',
          value: { stat: Stats.ER, scaling: (er) => toPercentage(0.4 * (er - 1)) },
        },
      ],
    },
    util: {
      title: `All-Preserver`,
      content: `Mora expended when ascending Swords and Polearms is decreased by <span class="text-desc">50%</span>.`,
    },
    c1: {
      title: 'C1: Ominous Inscription',
      content: `Chakra Desiderata will gather Resolve even faster. When <b class="text-genshin-electro">Electro</b> characters use their Elemental Bursts, the Resolve gained is increased by <span class="text-desc">80%</span>. When characters of other Elemental Types use their Elemental Bursts, the Resolve gained is increased by <span class="text-desc">20%</span>.`,
    },
    c2: {
      title: 'C2: Steelbreaker',
      content: `While using Musou no Hitotachi and in the Musou Isshin state applied by Secret Art: Musou Shinsetsu, the Raiden Shogun's attacks ignore <span class="text-desc">60%</span> of opponents' DEF.`,
    },
    c3: {
      title: 'C3: Shinkage Bygones',
      content: `Increases the Level of Secret Art: Musou Shinsetsu by <span class="text-desc">3</span>.
      <br />Maximum upgrade level is <span class="text-desc">15</span>.`,
    },
    c4: {
      title: 'C4: Pledge of Propriety',
      content: `When the Musou Isshin state applied by Secret Art: Musou Shinsetsu expires, all nearby party members (excluding the Raiden Shogun) gain <span class="text-desc">30%</span> bonus ATK for <span class="text-desc">10</span>s.`,
    },
    c5: {
      title: "C5: Shogun's Descent",
      content: `Increases the Level of Transcendence: Baleful Omen by <span class="text-desc">3</span>.
      <br />Maximum upgrade level is <span class="text-desc">15</span>.`,
    },
    c6: {
      title: 'C6: Wishbearer',
      content: `While in the Musou Isshin state applied by Secret Art: Musou Shinsetsu, attacks by the Raiden Shogun that are considered part of her Elemental Burst will decrease all nearby party members' (but not including the Raiden Shogun herself) Elemental Burst CD by <span class="text-desc">1</span>s when they hit opponents.
      <br />This effect can trigger once every <span class="text-desc">1</span>s, and can trigger a total of <span class="text-desc">5</span> times during the state's duration.`,
    },
  }

  const content: IContent[] = [
    {
      type: 'toggle',
      id: 'raidenSkill',
      text: `Eye of Stormy Judgement`,
      ...talents.skill,
      show: true,
      default: true,
    },
    {
      type: 'number',
      id: 'resolve',
      text: `Resolve Stacks`,
      ...talents.burst,
      show: true,
      min: 0,
      max: 60,
      default: 60,
    },
    {
      type: 'toggle',
      id: 'musou',
      text: `Musou Isshin`,
      ...talents.burst,
      show: true,
      default: false,
    },
  ]

  const teammateContent: IContent[] = [
    findContentById(content, 'raidenSkill'),
    {
      type: 'toggle',
      id: 'raidenC4',
      text: `Pledge of Propriety`,
      ...talents.c4,
      show: c >= 4,
      default: true,
    },
  ]

  return {
    upgrade,
    talents,
    content,
    teammateContent,
    allyContent: [],
    preCompute: (x: StatsObject, form: Record<string, any>) => {
      const base = _.cloneDeep(x)
      const resolveMainBonus = calcScaling(0.0389, 10, 'elemental', '1') * form.resolve
      const resolveAtkBonus = calcScaling(0.0073, 10, 'elemental', '1') * form.resolve

      base.BASIC_SCALING = form.musou
        ? [
            {
              name: '1-Hit',
              value: [
                { scaling: calcScaling(0.4474 + resolveAtkBonus, burst, 'physical', '1'), multiplier: Stats.ATK },
              ],
              element: Element.ELECTRO,
              property: TalentProperty.BURST,
            },
            {
              name: '2-Hit',
              value: [
                { scaling: calcScaling(0.4396 + resolveAtkBonus, burst, 'physical', '1'), multiplier: Stats.ATK },
              ],
              element: Element.ELECTRO,
              property: TalentProperty.BURST,
            },
            {
              name: '3-Hit',
              value: [
                { scaling: calcScaling(0.5382 + resolveAtkBonus, burst, 'physical', '1'), multiplier: Stats.ATK },
              ],
              element: Element.ELECTRO,
              property: TalentProperty.BURST,
            },
            {
              name: '4-Hit [1]',
              value: [
                { scaling: calcScaling(0.3089 + resolveAtkBonus, burst, 'physical', '1'), multiplier: Stats.ATK },
              ],
              element: Element.ELECTRO,
              property: TalentProperty.BURST,
            },
            {
              name: '4-Hit [2]',
              value: [
                { scaling: calcScaling(0.3098 + resolveAtkBonus, burst, 'physical', '1'), multiplier: Stats.ATK },
              ],
              element: Element.ELECTRO,
              property: TalentProperty.BURST,
            },
            {
              name: '5-Hit',
              value: [
                { scaling: calcScaling(0.7394 + resolveAtkBonus, burst, 'physical', '1'), multiplier: Stats.ATK },
              ],
              element: Element.ELECTRO,
              property: TalentProperty.BURST,
            },
          ]
        : [
            {
              name: '1-Hit',
              value: [{ scaling: calcScaling(0.3965, normal, 'physical', '1'), multiplier: Stats.ATK }],
              element: Element.PHYSICAL,
              property: TalentProperty.NA,
            },
            {
              name: '2-Hit',
              value: [{ scaling: calcScaling(0.3973, normal, 'physical', '1'), multiplier: Stats.ATK }],
              element: Element.PHYSICAL,
              property: TalentProperty.NA,
            },
            {
              name: '3-Hit',
              value: [{ scaling: calcScaling(0.4988, normal, 'physical', '1'), multiplier: Stats.ATK }],
              element: Element.PHYSICAL,
              property: TalentProperty.NA,
            },
            {
              name: '4-Hit [x2]',
              value: [{ scaling: calcScaling(0.2898, normal, 'physical', '1'), multiplier: Stats.ATK }],
              element: Element.PHYSICAL,
              property: TalentProperty.NA,
            },
            {
              name: '5-Hit',
              value: [{ scaling: calcScaling(0.6545, normal, 'physical', '1'), multiplier: Stats.ATK }],
              element: Element.PHYSICAL,
              property: TalentProperty.NA,
            },
          ]
      base.CHARGE_SCALING = form.musou
        ? [
            {
              name: 'Charged Attack [1]',
              value: [{ scaling: calcScaling(0.616 + resolveAtkBonus, burst, 'physical', '1'), multiplier: Stats.ATK }],
              element: Element.ELECTRO,
              property: TalentProperty.BURST,
            },
            {
              name: 'Charged Attack [2]',
              value: [
                { scaling: calcScaling(0.7436 + resolveAtkBonus, burst, 'physical', '1'), multiplier: Stats.ATK },
              ],
              element: Element.ELECTRO,
              property: TalentProperty.BURST,
            },
          ]
        : [
            {
              name: 'Charged Attack',
              value: [{ scaling: calcScaling(0.9959, normal, 'physical', '1'), multiplier: Stats.ATK }],
              element: Element.PHYSICAL,
              property: TalentProperty.CA,
            },
          ]
      base.PLUNGE_SCALING = form.musou
        ? [
            {
              name: 'Plunge DMG',
              value: [
                { scaling: calcScaling(0.6393 + resolveAtkBonus, burst, 'physical', '1'), multiplier: Stats.ATK },
              ],
              element: Element.ELECTRO,
              property: TalentProperty.BURST,
            },
            {
              name: 'Low Plunge DMG',
              value: [
                { scaling: calcScaling(1.2784 + resolveAtkBonus, burst, 'physical', '1'), multiplier: Stats.ATK },
              ],
              element: Element.ELECTRO,
              property: TalentProperty.BURST,
            },
            {
              name: 'High Plunge DMG',
              value: [
                { scaling: calcScaling(1.5968 + resolveAtkBonus, burst, 'physical', '1'), multiplier: Stats.ATK },
              ],
              element: Element.ELECTRO,
              property: TalentProperty.BURST,
            },
          ]
        : getPlungeScaling('base', normal)
      base.SKILL_SCALING = [
        {
          name: 'Skill DMG',
          value: [{ scaling: calcScaling(1.172, skill, 'physical', '1'), multiplier: Stats.ATK }],
          element: Element.ELECTRO,
          property: TalentProperty.SKILL,
        },
        {
          name: 'Coordinated ATK DMG',
          value: [{ scaling: calcScaling(0.42, skill, 'physical', '1'), multiplier: Stats.ATK }],
          element: Element.ELECTRO,
          property: TalentProperty.SKILL,
        },
      ]
      base.BURST_SCALING = [
        {
          name: 'Musou no Hitotachi DMG',
          value: [{ scaling: calcScaling(4.008 + resolveMainBonus, burst, 'physical', '1'), multiplier: Stats.ATK }],
          element: Element.ELECTRO,
          property: TalentProperty.BURST,
        },
      ]

      if (form.raidenSkill) base.BURST_DMG += calcScaling(0.0022, skill, 'elemental', '1') * 90 //0.22% x 90 Energy

      if (form.musou) {
        base.infuse(Element.ELECTRO, true)
        if (c >= 2) base.DEF_PEN += 0.6
      }

      return base
    },
    preComputeShared: (own: StatsObject, base: StatsObject, form: Record<string, any>) => {
      if (form.raidenSkill) base.BURST_DMG += calcScaling(0.0022, skill, 'elemental', '1') * base.MAX_ENERGY //Target Energy
      if (form.raidenC4) base[Stats.P_ATK] += 0.3
      return base
    },
    postCompute: (base: StatsObject, form: Record<string, any>) => {
      if (a >= 4) base[Stats.ELECTRO_DMG] += 0.4 * (base[Stats.ER] - 1)

      return base
    },
  }
}

export default Raiden
